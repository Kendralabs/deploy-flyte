#Use this section to configure the parameters for your environment. Use the outputs from the Terraform execution.
userSettings:
  googleProjectId: <PROJECT-ID> #gcloud projects list
  dbHost: "<db-host>" #Use "ip_address" from the db-host output 
  dbPassword: <db-password>
  bucketName: <gcs_bucket_name>
  hostName: <your-flyte-host-name> #Domain name you will use to connect to Flyte
  IAMWorkerRole: <GCP-WORKER-SERVICE-ACCOUNT>
  IAMBackendRole: <GCP-BINARY-SERVICE-ACCOUNT>

configuration:
  database:
    username: flyte
    password: "{{ .Values.userSettings.dbPassword }}"
    host:  "{{ .Values.userSettings.dbHost }}"
    dbname: flyte
  storage:
    metadataContainer: "{{ .Values.userSettings.bucketName}}" # It is possible to use different buckets
    userDataContainer: "{{ .Values.userSettings.bucketName}}"
    provider: gcs
    providerConfig:
      gcs:
        project: "{{ .Values.userSettings.googleProjectId }}"
  logging:
    level: 5
    plugins:
      stackdriver:
        enabled: false
        templateUri: |-
          https://console.cloud.google.com/logs/viewer?project=osscluster&angularJsUrl=%2Flogs%2Fviewer%3Fproject%3Dosscluster&resource=k8s_container&advancedFilter=resource.labels.pod_name%3D{{ .podName }}
  inline:
    cluster_resources:
      customData:
      - production: # you can set different IAM roles for each project-domain namespace
        - defaultIamRole:
            value: "{{ .Values.userSettings.IAMWorkerRole}}@{{ .Values.userSettings.googleProjectId}}.iam.gserviceaccount.com"
      - staging:
        - defaultIamRole:
            value: "{{ .Values.userSettings.IAMWorkerRole}}@{{ .Values.userSettings.googleProjectId}}.iam.gserviceaccount.com"
      - development:
        - defaultIamRole:
            value: "{{ .Values.userSettings.IAMWorkerRole}}@{{ .Values.userSettings.googleProjectId}}.iam.gserviceaccount.com"
    task_resources:
      defaults:
        cpu: 1
        memory: 1Gi
        storage: 1Gi
      limits:
        cpu: 64
        gpu: 8
        memory: 100Gi
        storage: 100Gi
clusterResourceTemplates:
  inline:
    001_namespace.yaml: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ namespace }}'
    002_serviceaccount.yaml: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: default
        namespace: '{{ namespace }}'
        annotations:
          iam.gke.io/gcp-service-account: '{{ defaultIamRole }}'
#deployment:
#  resources:
#    limits:
#      memory: 1Gi
#    requests:
#      cpu: 1
rbac:
  extraRules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - get
    - list
    - patch
    - update
serviceAccount:
  create: true
  annotations:
    iam.gke.io/gcp-service-account: "{{ .Values.userSettings.IAMBackendRole}}@{{ .Values.userSettings.googleProjectId}}.iam.gserviceaccount.com"

ingress:
   create: true
   ingressClassName: nginx
   host: "{{ .Values.userSettings.hostName}}"
   tls:
     - hosts: 
       - "{{ .Values.userSettings.hostName}}"
       secretName: flyte-secret-tls
   commonAnnotations:
     nginx.ingress.kubernetes.io/ssl-redirect: "true"
     cert-manager.io/issuer: "letsencrypt-production"
     acme.cert-manager.io/http01-edit-in-place: "true"
   httpAnnotations:
    nginx.ingress.kubernetes.io/app-root: /console
   grpcAnnotations:
     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
   
   
  